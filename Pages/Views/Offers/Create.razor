@page "/Offers/Create"
@inject Data.ApplicationDbContext dbContext
@inject AuthenticationStateProvider _authenticationStateProvider
@attribute [Authorize(Roles = "vendor")]

<h3>Create offer</h3>

<EditForm Model="offerToAdd" OnValidSubmit="CreateOfferAsync">
    <div class="form-group row">
        <label for="salesPoint">SalesPoint</label>
        <InputSelect @bind-Value="salesPointId" class="form-control" id="salesPoint">
            <option value="0">Select a salespoint</option>
            @foreach (var sp in salesPoints)
            {
                <option value="@sp.Id">@sp.Name</option>
            }
        </InputSelect>
    </div>
    <div class="form-group row">
        <label for="fuelType">FuelType</label>
        <InputSelect @bind-Value="fuelTypeId" class="form-control" id="fuelType">
            <option value="0">Select fuel type</option>
            @foreach (var ft in fuelTypes)
            {
                <option value="@ft.Id">@ft.Name</option>
            }
        </InputSelect>
    </div>
    <div class="form-group mb-3">
        <label for="price">Price</label>
        <InputNumber @bind-Value="offerToAdd.Price" class="form-control" id="name" />
    </div>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-warning" type="submit">
        Dodaj
    </button>

    <button @onclick="@(() => NavigationManager.NavigateTo("/Offers"))" class="btn btn-secondary">
        Anuluj
    </button>
</EditForm>

@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
