@page "/Offers/"
@inject Data.ApplicationDbContext dbContext
@inject AuthenticationStateProvider _authenticationStateProvider
@using Radzen
@using Radzen.Blazor

<h3>Przeglądanie Ofert</h3>

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true"
                FilterMode="FilterMode.Simple" PageSize="20" AllowPaging="true" AllowSorting="true" Data="@offersDataGrid" TItem="Offer" ColumnWidth="300px"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>
        <RadzenDataGridColumn TItem="Offer" Property="SalesPoint.Name" Title="Punkt Sprzedaży" />
        <RadzenDataGridColumn TItem="Offer" Property="FuelType.Name" Title="Typ Opału" />
        <RadzenDataGridColumn TItem="Offer" Property="Price" Title="Cena" />
        <RadzenDataGridColumn TItem="Offer" Property="SalesPoint.PostCode" Title="Kod pocztowy" />
        <RadzenDataGridColumn TItem="Offer" Property="SalesPoint.City" Title="Miasto" />
    </Columns>
</RadzenDataGrid>

@code {

    IEnumerable<Offer> offersDataGrid;

    protected override void OnInitialized()
    {
        offersDataGrid = dbContext.Offers.ToList();
    }

    void OnChange(object value)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;

        Console.WriteLine($"Value changed to {str}");
    }
}

@inject IJSRuntime JsRuntime
